diff --git a/include/openPMD/IO/IOTask.hpp b/include/openPMD/IO/IOTask.hpp
index 7647b4a4..1082a8bd 100644
--- a/include/openPMD/IO/IOTask.hpp
+++ b/include/openPMD/IO/IOTask.hpp
@@ -30,6 +30,12 @@
 #include <string>
 #include <utility>
 
+#if _MSC_VER
+#   define EXPORT __declspec( dllexport )
+#else
+#   define EXPORT __attribute__((visibility("default")))
+#endif
+
 
 namespace openPMD
 {
@@ -41,7 +47,7 @@ getWritable(Attributable*);
 
 /** Type of IO operation between logical and persistent data.
  */
-enum class Operation
+enum class EXPORT Operation
 {
     CREATE_FILE,
     OPEN_FILE,
@@ -66,7 +72,7 @@ enum class Operation
     LIST_ATTS
 };  //Operation
 
-struct AbstractParameter
+struct EXPORT AbstractParameter
 {
     virtual ~AbstractParameter() = default;
     AbstractParameter() = default;
@@ -87,7 +93,7 @@ struct AbstractParameter
  * @tparam  Operation   Type of Operation to be executed.
  */
 template< Operation >
-struct Parameter : public AbstractParameter
+struct EXPORT Parameter : public AbstractParameter
 {
     Parameter() = delete;
     Parameter(Parameter const &) = delete;
@@ -95,7 +101,7 @@ struct Parameter : public AbstractParameter
 };
 
 template<>
-struct Parameter< Operation::CREATE_FILE > : public AbstractParameter
+struct EXPORT Parameter< Operation::CREATE_FILE > : public AbstractParameter
 {
     Parameter() = default;
     Parameter(Parameter const & p) : AbstractParameter(), name(p.name) {};
@@ -111,7 +117,7 @@ struct Parameter< Operation::CREATE_FILE > : public AbstractParameter
 };
 
 template<>
-struct Parameter< Operation::OPEN_FILE > : public AbstractParameter
+struct EXPORT Parameter< Operation::OPEN_FILE > : public AbstractParameter
 {
     Parameter() = default;
     Parameter(Parameter const & p) : AbstractParameter(), name(p.name) {};
@@ -127,7 +133,7 @@ struct Parameter< Operation::OPEN_FILE > : public AbstractParameter
 };
 
 template<>
-struct Parameter< Operation::DELETE_FILE > : public AbstractParameter
+struct EXPORT Parameter< Operation::DELETE_FILE > : public AbstractParameter
 {
     Parameter() = default;
     Parameter(Parameter const & p) : AbstractParameter(), name(p.name) {};
@@ -143,7 +149,7 @@ struct Parameter< Operation::DELETE_FILE > : public AbstractParameter
 };
 
 template<>
-struct Parameter< Operation::CREATE_PATH > : public AbstractParameter
+struct EXPORT Parameter< Operation::CREATE_PATH > : public AbstractParameter
 {
     Parameter() = default;
     Parameter(Parameter const & p) : AbstractParameter(), path(p.path) {};
@@ -159,7 +165,7 @@ struct Parameter< Operation::CREATE_PATH > : public AbstractParameter
 };
 
 template<>
-struct Parameter< Operation::OPEN_PATH > : public AbstractParameter
+struct EXPORT Parameter< Operation::OPEN_PATH > : public AbstractParameter
 {
     Parameter() = default;
     Parameter(Parameter const & p) : AbstractParameter(), path(p.path) {};
@@ -175,7 +181,7 @@ struct Parameter< Operation::OPEN_PATH > : public AbstractParameter
 };
 
 template<>
-struct Parameter< Operation::DELETE_PATH > : public AbstractParameter
+struct EXPORT Parameter< Operation::DELETE_PATH > : public AbstractParameter
 {
     Parameter() = default;
     Parameter(Parameter const & p) : AbstractParameter(), path(p.path) {};
@@ -191,7 +197,7 @@ struct Parameter< Operation::DELETE_PATH > : public AbstractParameter
 };
 
 template<>
-struct Parameter< Operation::LIST_PATHS > : public AbstractParameter
+struct EXPORT Parameter< Operation::LIST_PATHS > : public AbstractParameter
 {
     Parameter() = default;
     Parameter(Parameter const & p) : AbstractParameter(), paths(p.paths) {};
@@ -208,7 +214,7 @@ struct Parameter< Operation::LIST_PATHS > : public AbstractParameter
 };
 
 template<>
-struct Parameter< Operation::CREATE_DATASET > : public AbstractParameter
+struct EXPORT Parameter< Operation::CREATE_DATASET > : public AbstractParameter
 {
     Parameter() = default;
     Parameter(Parameter const & p) : AbstractParameter(),
@@ -232,7 +238,7 @@ struct Parameter< Operation::CREATE_DATASET > : public AbstractParameter
 };
 
 template<>
-struct Parameter< Operation::EXTEND_DATASET > : public AbstractParameter
+struct EXPORT Parameter< Operation::EXTEND_DATASET > : public AbstractParameter
 {
     Parameter() = default;
     Parameter(Parameter const & p) : AbstractParameter(),
@@ -250,7 +256,7 @@ struct Parameter< Operation::EXTEND_DATASET > : public AbstractParameter
 };
 
 template<>
-struct Parameter< Operation::OPEN_DATASET > : public AbstractParameter
+struct EXPORT Parameter< Operation::OPEN_DATASET > : public AbstractParameter
 {
     Parameter() = default;
     Parameter(Parameter const & p) : AbstractParameter(),
@@ -271,7 +277,7 @@ struct Parameter< Operation::OPEN_DATASET > : public AbstractParameter
 };
 
 template<>
-struct Parameter< Operation::DELETE_DATASET > : public AbstractParameter
+struct EXPORT Parameter< Operation::DELETE_DATASET > : public AbstractParameter
 {
     Parameter() = default;
     Parameter(Parameter const & p) : AbstractParameter(), name(p.name) {};
@@ -287,7 +293,7 @@ struct Parameter< Operation::DELETE_DATASET > : public AbstractParameter
 };
 
 template<>
-struct Parameter< Operation::WRITE_DATASET > : public AbstractParameter
+struct EXPORT Parameter< Operation::WRITE_DATASET > : public AbstractParameter
 {
     Parameter() = default;
     Parameter(Parameter const & p) : AbstractParameter(),
@@ -308,7 +314,7 @@ struct Parameter< Operation::WRITE_DATASET > : public AbstractParameter
 };
 
 template<>
-struct Parameter< Operation::READ_DATASET > : public AbstractParameter
+struct EXPORT Parameter< Operation::READ_DATASET > : public AbstractParameter
 {
     Parameter() = default;
     Parameter(Parameter const & p) : AbstractParameter(),
@@ -329,7 +335,7 @@ struct Parameter< Operation::READ_DATASET > : public AbstractParameter
 };
 
 template<>
-struct Parameter< Operation::LIST_DATASETS > : public AbstractParameter
+struct EXPORT Parameter< Operation::LIST_DATASETS > : public AbstractParameter
 {
     Parameter() = default;
     Parameter(Parameter const & p) : AbstractParameter(),
@@ -347,7 +353,7 @@ struct Parameter< Operation::LIST_DATASETS > : public AbstractParameter
 };
 
 template<>
-struct Parameter< Operation::DELETE_ATT > : public AbstractParameter
+struct EXPORT Parameter< Operation::DELETE_ATT > : public AbstractParameter
 {
     Parameter() = default;
     Parameter(Parameter const & p) : AbstractParameter(), name(p.name) {};
@@ -363,7 +369,7 @@ struct Parameter< Operation::DELETE_ATT > : public AbstractParameter
 };
 
 template<>
-struct Parameter< Operation::WRITE_ATT > : public AbstractParameter
+struct EXPORT Parameter< Operation::WRITE_ATT > : public AbstractParameter
 {
     Parameter() = default;
     Parameter(Parameter const & p) : AbstractParameter(),
@@ -382,7 +388,7 @@ struct Parameter< Operation::WRITE_ATT > : public AbstractParameter
 };
 
 template<>
-struct Parameter< Operation::READ_ATT > : public AbstractParameter
+struct EXPORT Parameter< Operation::READ_ATT > : public AbstractParameter
 {
     Parameter() = default;
     Parameter(Parameter const & p) : AbstractParameter(),
@@ -403,7 +409,7 @@ struct Parameter< Operation::READ_ATT > : public AbstractParameter
 };
 
 template<>
-struct Parameter< Operation::LIST_ATTS > : public AbstractParameter
+struct EXPORT Parameter< Operation::LIST_ATTS > : public AbstractParameter
 {
     Parameter() = default;
     Parameter(Parameter const & p) : AbstractParameter(),
@@ -429,7 +435,7 @@ struct Parameter< Operation::LIST_ATTS > : public AbstractParameter
  * 3) concrete Writable object corresponding to both a local representation in
  *    openPMD-api and a persistent object in a file on disk
  */
-class IOTask
+class EXPORT IOTask
 {
 public:
     /** Constructor for self-contained description of single IO operation.
@@ -465,3 +471,5 @@ class IOTask
     std::shared_ptr< AbstractParameter > parameter;
 };  // IOTask
 } // namespace openPMD
+
+#undef EXPORT

